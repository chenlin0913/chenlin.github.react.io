{"map":"{\"version\":3,\"sources\":[\"D:/react-router-redux-cl/src\\\\page\\\\utils\\\\apis.js\"],\"names\":[\"_qs\",\"__webpack_require__\",\"instance\",\"axios\",\"create\",\"baseURL\",\"interceptors\",\"request\",\"use\",\"config\",\"method\",\"data\",\"qs\",\"stringify\",\"error\",\"console\",\"log\",\"alert\",\"Promise\",\"reject\",\"response\",\"post\",\"url\",\"resolve\",\"then\",\"success\",\"catch\"],\"mappings\":\"0IAAA,MAAAA,EAAAC,EAAA,sEAEA,IAEMC,EAAWC,EAAMC,QACtBC,QAHgB,SAOjBH,EAASI,aAAaC,QAAQC,IAAI,SAAAC,GAKjC,MAHmB,SAAhBA,EAAOC,SACTD,EAAOE,KAAOC,EAAAA,QAAGC,UAAUJ,EAAOE,OAE5BF,GACN,SAAAK,GAGD,OAFAC,QAAQC,IAAIF,GACZG,MAAM,SACCC,QAAQC,OAAOL,KAIvBZ,EAASI,aAAac,SAASZ,IAAI,SAAAY,GAElC,OAAOA,GACN,SAAAN,GAID,OAHAC,QAAQC,IAAIF,GAEZG,MAAM,eACCC,QAAQC,OAAOL,gBAItBO,KADa,SACRC,EAAIX,GACR,OAAO,IAAIO,QAAQ,SAACK,EAAQJ,GAC3BjB,EAASmB,KAAKC,EAAIX,GAAMa,KAAK,SAAAJ,GAC5BL,QAAQC,IAAI,YACRI,EAAST,KAAKc,QAIlBF,EAAQH,GAHPD,EAAOC,IAIP,SAAAN,GACDC,QAAQC,IAAI,SACZG,EAAOL,KACLY,MAAM,SAAAZ,GACRC,QAAQC,IAAI,SACZG,EAAOL\",\"sourcesContent\":[\"import qs from 'qs';\\r\\n\\r\\nconst baseURLs = '/api';\\r\\n\\r\\nconst instance = axios.create({\\r\\n\\tbaseURL:baseURLs\\r\\n});\\r\\n\\r\\n//请求拦截器\\r\\ninstance.interceptors.request.use(config=>{\\r\\n\\t//loading开启\\r\\n\\tif(config.method==='post'){//如果是post请求，将传参进行qs序列化\\r\\n\\t\\tconfig.data = qs.stringify(config.data);\\r\\n\\t}\\r\\n\\treturn config;\\r\\n},error=>{\\r\\n\\tconsole.log(error);\\r\\n\\talert(\\\"错误的传参\\\");\\r\\n\\treturn Promise.reject(error);\\r\\n})\\r\\n\\r\\n//响应拦截器\\r\\ninstance.interceptors.response.use(response=>{\\r\\n\\t//loading关闭\\r\\n\\treturn response;\\r\\n},error=>{\\r\\n\\tconsole.log(error);\\r\\n\\t//loading关闭\\r\\n\\talert(\\\"网络异常，请检测网络！\\\");\\r\\n\\treturn Promise.reject(error);\\r\\n})\\r\\n\\r\\nexport default{\\r\\n\\tpost(url,data){\\r\\n\\t\\treturn new Promise((resolve,reject)=>{\\r\\n\\t\\t\\tinstance.post(url,data).then(response=>{\\r\\n\\t\\t\\t\\tconsole.log(\\\"response\\\");\\r\\n\\t\\t\\t\\tif(!response.data.success){\\r\\n\\t\\t\\t\\t\\treject(response);\\r\\n\\t\\t\\t\\t\\treturn;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tresolve(response);\\r\\n\\t\\t\\t},error=>{\\r\\n\\t\\t\\t\\tconsole.log(\\\"error\\\");\\r\\n\\t\\t\\t\\treject(error);\\r\\n\\t\\t\\t}).catch(error=>{\\r\\n\\t\\t\\t\\tconsole.log(\\\"catch\\\");\\r\\n\\t\\t\\t\\treject(error);\\r\\n\\t\\t\\t})\\r\\n\\t\\t})\\r\\n\\t}\\r\\n}\"]}","code":"webpackHotUpdate(5,{\"./src/page/utils/apis.js\":function(e,t,o){\"use strict\";(function(e){Object.defineProperty(t,\"__esModule\",{value:!0});var n,s=o(\"./node_modules/qs/lib/index.js\"),r=(n=s)&&n.__esModule?n:{default:n};var c=e.create({baseURL:\"/api\"});c.interceptors.request.use(function(e){return\"post\"===e.method&&(e.data=r.default.stringify(e.data)),e},function(e){return console.log(e),alert(\"错误的传参\"),Promise.reject(e)}),c.interceptors.response.use(function(e){return e},function(e){return console.log(e),alert(\"网络异常，请检测网络！\"),Promise.reject(e)}),t.default={post:function(e,t){return new Promise(function(o,n){c.post(e,t).then(function(e){console.log(\"response\"),e.data.success?o(e):n(e)},function(e){console.log(\"error\"),n(e)}).catch(function(e){console.log(\"catch\"),n(e)})})}}}).call(this,o(\"./node_modules/axios/index.js\"))}});","extractedComments":[]}